<program xmlns="http://www.kinoma.com/kpr/1">
	
	<script><![CDATA[
		var weather = weather = {
			codes: [9,3,7,1,1,0,0,0,3,3,3,3,3,0,0,0,0,0,0,6,5,2,5,4,4,0,4,4,4,4,4,8,2,8,2,0,2,1,1,1,3,0,0,0,4,1,0,1],
			env: 'store://XGO3ID0Yp2PK0TRY0GJl9z',
			format: 'json',
			oauth_consumer_key: "dj0yJmk9a0JRR0ZZdFhzbkUxJmQ9WVdrOWQyZHBaVzE1Tm04bWNHbzlNVEF6TlRJM09UVTJNZy0tJnM9Y29uc3VtZXJzZWNyZXQmeD1lYQ--", 
			oauth_consumer_secret: "84b2d1562843e5045f09c00d4c3137ea30ed2d20", 
			realm: "yahooapis.com",
			url: 'http://kinoma-mobile.query.yahooapis.com/v1/yql?'
		}
		var authorizeMessage = function(message, authorization) {
			var time = Math.floor(Date.now() / 1000)
			message.setRequestHeader("Authorization", 'OAuth realm="' + encodeURIComponentRFC3986(authorization.realm) + '",'
				+ 'oauth_consumer_key="' + encodeURIComponentRFC3986(authorization.oauth_consumer_key) + '",'
				+ 'oauth_nonce="' + encodeURIComponentRFC3986(time + Math.floor(1000000 * Math.random())) + '",'
				+ 'oauth_signature="' + encodeURIComponentRFC3986(authorization.oauth_consumer_secret) + '&",'
				+ 'oauth_signature_method="PLAINTEXT",'
				+ 'oauth_timestamp="' + encodeURIComponentRFC3986(time) + '",'
				+ 'oauth_version="1.0"');
		}
		var codeToVariant = function(code) {
			code = Number(code);
			return (code > 47) ? 10 : weather.codes[code];
		}
		var degreeToString = function(degree, celsius) {
			if (isNaN(degree))
				return "?";
			if (celsius) 
				degree = (degree - 32) * 5 / 9;
			degree = Math.round(degree);
			return degree + "°";
		}
		var refreshInterval = 10 * 60 * 1000;
	]]></script>

	<container id="Weather" left="0" right="0" top="0" bottom="0" skin="$.weather.theme.skin" style="$.weather.theme.style" active="true">
		<behavior>
			<method id="onCreate" params="container, $"><![CDATA[
				this.data = $.weather;
			]]></method>
			<method id="onTemperatureChanged" params="container"><![CDATA[
				var data = this.data;
				data.TEMPERATURE.string = degreeToString(data.temperature, data.celsius);
			]]></method>
			<method id="onTouchEnded" params="container"><![CDATA[
				var data = this.data;
				if (data.celsius) {
					data.celsius = false;
					model.savePreferences();
					application.run(new FlipRightTransition, application.first, model.createScreen());
				}
				else {
					data.celsius = true;
					model.savePreferences();
					application.run(new FlipLeftTransition, application.first, model.createScreen());
				}
			]]></method>
			<method id="onWeatherChanged" params="container"><![CDATA[
				var data = this.data;
				data.LEFT.variant = data.RIGHT.variant = data.variant;
				data.HIGH.string = degreeToString(data.high, data.celsius);
				data.LOW.string = degreeToString(data.low, data.celsius);
			]]></method>
		</behavior>
		<scope with="$.weather">
			<scroller left="0" right="0" top="-5" height="170" loop="true" clip="true">
				<behavior>
					<method id="onTimeChanged" params="scroller"><![CDATA[
						scroller.scrollBy(1, 0);
					]]></method>
					<method id="onDisplaying" params="scroller"><![CDATA[
						scroller.interval = 25;
						scroller.start();
					]]></method>
				</behavior>
				<line left="0" top="0" height="170" >
					<content anchor="LEFT" width="180" top="0" height="170" skin="weatherSkin" state="$.theme.state" variant="$.variant"/>
					<content width="60"/>
					<content anchor="RIGHT" width="180" top="0" height="170" skin="weatherSkin" state="$.theme.state" variant="$.variant"/>
					<content width="60"/>
				</line>
			</scroller>
			<container left="0" right="0" top="160" height="160" skin="temperatureSkin" state="$.theme.state">
				<content width="170" height="150" bottom="0" skin="homeSkin" state="$.theme.state"/>
			</container>
			<label anchor="HIGH" width="240" top="0" height="80" skin="highSkin" style="highStyle" state="$.theme.state" string="degreeToString($.high, $.celsius)"/>
			<label anchor="LOW" width="240" top="80" height="80" skin="lowSkin" style="lowStyle" state="$.theme.state" string="degreeToString($.low, $.celsius)"/>
			<label anchor="TEMPERATURE" left="0" right="0" height="115" bottom="0" style="temperatureStyle" state="$.theme.state" string="degreeToString($.temperature, $.celsius)"/>
			<label left="0" right="0" height="40" bottom="0" state="$.theme.state" style="celsiusStyle" visible="$.celsius" string="'°C'"/>
			<label left="0" right="0" height="40" bottom="0" state="$.theme.state" style="fahrenheitStyle" visible="!$.celsius" string="'°F'"/>
		</scope>
	</container>
	
	<handler path="/weather">
		<behavior>
			<method id="onComplete" params="handler, message, json"><![CDATA[
				if (json) {
					var query = {
						latitude: json.result.record.latitude,
						longitude: json.result.record.longitude
					}
					handler.redirect("/weather2?" + serializeQuery(query));
				}
			]]></method>
			<method id="onInvoke" params="handler, message"><![CDATA[
				var message = new Message("http://k3.cloud.kinoma.com/api?extAction=GeoIP&extMethod=getRecord");
				handler.invoke(message, Message.JSON);
			]]></method>
		</behavior>
	</handler>
	
	<handler path="/weather2">
		<behavior>
			<method id="onComplete" params="handler, message, json"><![CDATA[
				if (json) {
					var day = json.query.results.location.forecast.day[0];
					var weather = model.data.weather;
					weather.high = parseFloat(day.temp.high);
					weather.low = parseFloat(day.temp.low);
					weather.variant = codeToVariant(day.condition.code);
					application.distribute("onWeatherChanged");
				}
			]]></method>
			<method id="onInvoke" params="handler, message"><![CDATA[
				var query = parseQuery(message.query);
				var message = new Message(weather.url + serializeQuery({
					q: 'select * from partner.weather.forecasts where (lat,lon) in (' + query.latitude + ',' + query.longitude + ' ) and days="7" and unit="f" and lang="EN"',
					env: weather.env,
					format: weather.format
				}));
				authorizeMessage(message, weather);
				handler.invoke(message, Message.JSON);
			]]></method>
		</behavior>
	</handler>
</program>